{"version":3,"sources":["assets/zigzag_logo.svg","components/Login/useMessageGrabber.js","components/Login/Login.js","App.js","index.js"],"names":["module","exports","useMessageGrabber","useState","message","setMessage","name","value","registerOrLogin","a","axios","get","res","console","log","response","data","Object","keys","Login","loginOrRegister","setLoginOrRegister","email","username","password","setValue","changeHandler","target","emailMessage","setEmailMessage","usernameMessage","setUsernameMessage","className","src","zigzag_logo","alt","onClick","type","id","placeholder","onChange","onBlur","minLength","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.24fa2903.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/zigzag_logo.fa9d4338.svg\";","import {useState} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useMessageGrabber = ()=>{\r\n    const [message, setMessage] = useState('');\r\n\r\n\r\n    const getMessage = async(name, value, registerOrLogin) =>{\r\n        let response;\r\n        const res = await axios.get(`/loginRegisterEvaluate/${name}/?${name}=${value}`);\r\n        console.log(res);\r\n        if(res.data)\r\n            response = Object.keys(res.data)[0];\r\n        else\r\n            response = 'err'; \r\n        \r\n        switch(name){\r\n            case('email'):\r\n                if (response === 'err') setMessage(['connection error', 'failure']);\r\n                else if(response) registerOrLogin === 'Login'? setMessage(['email recongized', 'success']) : setMessage(['email taken', 'failure'])\r\n                else registerOrLogin === 'Register'? setMessage(['email available', 'succes']) : setMessage(['email not recognized', 'failure'])\r\n                break;\r\n            case('username'):\r\n                if (response === 'err') setMessage(['connection error', 'failure']);\r\n                else if(response) registerOrLogin === 'Login'? setMessage(['username recongized', 'success']) : setMessage(['username taken', 'failure'])\r\n                else registerOrLogin === 'Register'? setMessage(['username available', 'success']) : setMessage(['username not recognized', 'failure'])\r\n                break;\r\n            default:\r\n                setMessage(['connection error', 'failure']);\r\n                break;\r\n        }\r\n        \r\n    }\r\n    return [message, getMessage];\r\n}\r\n\r\nexport default useMessageGrabber;","import React, {useState} from 'react';\r\nimport useMessageGrabber from './useMessageGrabber';\r\nimport zigzag_logo from '../../assets/zigzag_logo.svg';\r\nimport './Login.scss';\r\n\r\nconst Login = ()=>{\r\n    const [loginOrRegister, setLoginOrRegister] = useState('Register');\r\n    const [value, setValue] = useState({email: '', username: '', password: ''});\r\n    const changeHandler = ({target})=>{setValue({...value, [target.name]: target.value})};\r\n    const [emailMessage, setEmailMessage] = useMessageGrabber();\r\n    const [usernameMessage, setUsernameMessage] = useMessageGrabber();\r\n    return(\r\n            <div className = 'LoginBox'>\r\n                <div className = 'logoBox'>\r\n                    <img className = 'zigzag_logo' src = {zigzag_logo} alt = 'ZigZag Logo' />\r\n                </div>\r\n                <form className = 'loginBox'>\r\n                    <div className = 'LoginRegisterBox'>\r\n                        <span \r\n                            onClick = {()=>setLoginOrRegister('Register')}\r\n                            className = {`LoginRegister ${loginOrRegister === 'Register'? 'Register': 'canClick'}`}>\r\n                            Register\r\n                        </span>\r\n                        <span \r\n                            onClick = {()=>setLoginOrRegister('Login')}\r\n                            className = {`LoginRegister ${loginOrRegister === 'Login'? 'Login': 'canClick'}`}>\r\n                                Login\r\n                        </span>\r\n                    </div>\r\n                    {loginOrRegister === 'Register' &&\r\n                            <div className = 'labelInputBox'>\r\n                                <label className = 'labelBox'>EMAIL</label>\r\n                                    <input\r\n                                        className = 'input'\r\n                                        type = 'email'\r\n                                        value = {value.email}\r\n                                        name = 'email'\r\n                                        id = 'email'\r\n                                        placeholder = 'Ex: something@gmail.com'\r\n                                        onChange = {changeHandler}\r\n                                        onBlur = {({target})=>setEmailMessage(target.name, value.email,loginOrRegister)} \r\n                                    />\r\n                                <span className = {emailMessage[1]}>{emailMessage[0]}</span>\r\n                            </div>\r\n                    }   \r\n    \r\n                    <div className = 'labelInputBox'>\r\n                        <label className = 'labelBox'>USERNAME</label>\r\n                            <input\r\n                                className = 'input'\r\n                                value = {value.username}\r\n                                name = 'username'\r\n                                id = 'username'\r\n                                placeholder = 'Ex: HaloTop117'\r\n                                onChange = {changeHandler} \r\n                                onBlur = {({target})=>setUsernameMessage(target.name, value.username,loginOrRegister)}\r\n                            />\r\n                            <span className = {usernameMessage[1]}>{usernameMessage[0]}</span>\r\n                        \r\n                    </div>\r\n    \r\n                    <div className = 'labelInputBox'>\r\n                    \r\n                        <label className = 'labelBox'>PASSWORD</label>\r\n                            <input\r\n                                type = 'password'\r\n                                className = 'input'\r\n                                value = {value.password}\r\n                                name = 'password'\r\n                                id = 'password'\r\n                                placeholder = 'must be at least 8 characters long'\r\n                                onChange = {changeHandler} \r\n                                minLength = {8}\r\n                            />\r\n                        \r\n                    </div>\r\n                    <div className = 'labelInputBox'>\r\n                        <button className = 'submitButton'>SUBMIT</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport Login from './components/Login/Login';\r\nimport './App.scss';\r\n\r\nconst App = ()=>\r\n    <div className = 'App'>\r\n        <Login />\r\n    </div>\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}